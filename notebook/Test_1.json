{
	"name": "Test_1",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "test",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"runAsWorkspaceSystemIdentity": false,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "1a27112b-b9a6-4c2e-a7d2-2618c8e2d7f0"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/d3239a8e-9a35-4de9-986f-a84d62569e9e/resourceGroups/demo/providers/Microsoft.Synapse/workspaces/venky1998/bigDataPools/test",
				"name": "test",
				"type": "Spark",
				"endpoint": "https://venky1998.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/test",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.4",
				"nodeCount": 10,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"source": [
					"df = spark.read.load('abfss://demo@vramakrishnan.dfs.core.windows.net/taxi_zone.csv', format='csv', header = True)"
				],
				"execution_count": 37
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"# Top 10\r\n",
					"display(df))"
				],
				"execution_count": 39
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"display(df.filter(df.Borough == \"Manhattan\"))"
				],
				"execution_count": 40
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"display(df)"
				],
				"execution_count": 41
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"display(df.groupBy(\"Borough\").count())"
				],
				"execution_count": 42
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"df1 =  df.groupBy(\"Zone\") and df.filter(df.Borough == 'Manhattan')\r\n",
					"display(df1)"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"display(df1.groupBy(\"service_zone\").count())"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"display(df.groupBy(\"service_zone\").count())"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"df2 = (df.filter(df.service_zone == 'Boro Zone') and df.groupBy(\"Borough\").count())\r\n",
					"display(df2)"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Bottom 5\r\n",
					"df = spark.read.load(\"abfss://demo@vramakrishnan.dfs.core.windows.net/taxi_zone.csv\",format=(\"csv\"),header=True)\r\n",
					"\r\n",
					"df.tail(num= 5)"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"# Top 5\r\n",
					"#df.head(n = 5)\r\n",
					"display(df.head(10))"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"df2 = (df.filter(df.service_zone == 'Boro Zone') and df.groupBy(\"Borough\").count())\r\n",
					"df2.write.csv(\"abfss://demo@vramakrishnan.dfs.core.windows.net/Boro\", header = True)"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Reading CSV file\r\n",
					"df = spark.read.load(\"abfss://demo@vramakrishnan.dfs.core.windows.net/taxi_zone.csv\",format=(\"csv\"),header=True)\r\n",
					"# Filtering based on service zone and grouping by Borough\r\n",
					"df2 = (df.filter(df.service_zone == 'Boro Zone') and df.groupBy(\"Borough\").count())\r\n",
					"# writing df2 to filesystem \r\n",
					"df2.write.csv(\"abfss://demo@vramakrishnan.dfs.core.windows.net/Boro\", header = True)\r\n",
					"\r\n",
					"path = \"abfss://demo@vramakrishnan.dfs.core.windows.net/Boro\"\r\n",
					"source_path = \"abfss://demo@vramakrishnan.dfs.core.windows.net/Boro/part-00000-c6731997-7962-4bc2-8370-d8b06644d9e5-c000.csv\"\r\n",
					"dest_path = \"abfss://demo@vramakrishnan.dfs.core.windows.net/Test/Borozone_count.csv\"\r\n",
					"\r\n",
					"# listing file items\r\n",
					"mssparkutils.fs.ls(path)\r\n",
					"# copying df2 to destinantion\r\n",
					"mssparkutils.fs.cp(source_path,dest_path)\r\n",
					"# removing the source(recurse is true to delete non empty dir)\r\n",
					"mssparkutils.fs.rm(path, recurse=True)"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"# for reading txt file (with pipe delimiter)\r\n",
					"df3 = spark.read.option(\"header\", \"true\")\\\r\n",
					"                .option(\"delimiter\",\"\\t\")\\\r\n",
					"                .option(\"inferschema\", \"true\")\\\r\n",
					"                .csv(\"abfss://demo@vramakrishnan.dfs.core.windows.net/taxi_zone_note.txt\")\r\n",
					"display(df3)"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# reading txt file using pipe delimiter\r\n",
					"df4 = spark.read.option(\"header\",\"true\")\\\r\n",
					"                .option(\"delimiter\",\"|\")\\\r\n",
					"                .option(\"inferschema\",\"true\")\\\r\n",
					"                .csv(\"abfss://demo@vramakrishnan.dfs.core.windows.net/taxi_zone_note_pipe.txt\")\r\n",
					"\r\n",
					"df4.show()"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"df5 = spark.read.format(\"com.crealytics.spark.excel\") \\\r\n",
					"    .option(\"header\", \"true\") \\\r\n",
					"    .option(\"inferSchema\", \"true\") \\\r\n",
					"    .load(\"abfss://demo@vramakrishnan.dfs.core.windows.net/taxi_zone_3.xlsx\")\r\n",
					""
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"from pyspark.context import SparkContext\r\n",
					"from pyspark.sql import SparkSession\r\n",
					"\r\n",
					"spark = SparkSession.builder \\\r\n",
					"    .appName(\"Read Excel in Synapse\") \\\r\n",
					"    .config(\"spark.jars.packages\", \"com.crealytics:spark-excel_2.12:0.13.7\") \\\r\n",
					"    .getOrCreate()\r\n",
					"\r\n",
					"# Read Excel file\r\n",
					"df5 = spark.read.format(\"com.crealytics.spark.excel\") \\\r\n",
					"    .option(\"header\", \"true\") \\\r\n",
					"    .option(\"inferSchema\", \"true\") \\\r\n",
					"    .option(\"dataAddress\", \"'Sheet1'!A1\") \\\r\n",
					"    .load(\"abfss://demo@vramakrishnan.dfs.core.windows.net/taxi_zone_3.xlsx\")\r\n",
					"\r\n",
					"# Show the DataFrame\r\n",
					"df5.show()"
				],
				"execution_count": 49
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"source_path = \"abfss://demo@vramakrishnan.dfs.core.windows.net/Boro\"\r\n",
					"dest_path = \"abfss://demo@vramakrishnan.dfs.core.windows.net/Start/Borozone.csv\"\r\n",
					"\r\n",
					"file_list = mssparkutils.fs.ls(source_path)\r\n",
					"\r\n",
					"for file_info in file_list:\r\n",
					"    file_path = file_info.path\r\n",
					"\r\n",
					"    if file_path.endswith(\".csv\"):\r\n",
					"        mssparkutils.fs.cp(file_path,dest_path)\r\n",
					"        mssparkutils.fs.rm(source_path,recurse=True)\r\n",
					"    else:\r\n",
					"        print(\"hi\")\r\n",
					""
				],
				"execution_count": 100
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					""
				],
				"execution_count": 105
			}
		]
	}
}